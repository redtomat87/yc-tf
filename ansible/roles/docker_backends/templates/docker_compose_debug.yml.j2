x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  debug-white:
    image: vscoder/webdebugger
    container_name: debug-white
    restart: unless-stopped
    environment:
      APP_DELAY: 0
      APP_PORT: 8080
      APP_BGCOLOR: white
    ports:
      - "9001:8080"
  debug-blue:
    image: vscoder/webdebugger
    container_name: debug-blue
    restart: unless-stopped
    environment:
      APP_DELAY: 0
      APP_PORT: 8080
      APP_BGCOLOR: skyblue
    ports:
      - "9003:8080"
  debug-green:
    image: vscoder/webdebugger
    container_name: debug-green
    restart: unless-stopped
    environment:
      APP_DELAY: 0
      APP_PORT: 8080
      APP_BGCOLOR: limegreen
    ports:
      - "9002:8080"      
  debug-gold:
    image: vscoder/webdebugger
    container_name: debug-gold
    restart: unless-stopped
    environment:
      APP_DELAY: 0
      APP_PORT: 8080
      APP_BGCOLOR: gold
    ports:
      - "9004:8080"

  postgres:
    image: postgres:{{ postgresql.POSTGRES_VERSION }}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    environment:
      POSTGRES_DB: {{ postgresql.POSTGRES_DB }}
      POSTGRES_USER: {{ postgresql.POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ postgresql.POSTGRES_PASSWORD }}
    volumes:
      - "{{ postgresql.volume_name }}:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    logging: *logging

  keycloak:
    image: quay.io/keycloak/keycloak:{{ keycloak.KC_VERSION }}
    command: ["start", "--import-realm"]
    restart: unless-stopped
    environment:
      KC_DB: {{ keycloak.KC_DB }}
      KC_DB_USERNAME: {{ postgresql.POSTGRES_USER }}
      KC_DB_PASSWORD: {{ postgresql.POSTGRES_PASSWORD }}
      KC_DB_URL: "jdbc:postgresql://{{ ansible_default_ipv4.address }}:5432/{{ postgresql.POSTGRES_DB }}"
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: {{ keycloak.KC_LOG_LEVEL }}
      KC_REALM_NAME: {{ keycloak.KC_LOG_LEVEL }}
      KC_BOOTSTRAP_ADMIN_USERNAME: {{ keycloak.KEYCLOAK_ADMIN_USERNAME }}
      KC_BOOTSTRAP_ADMIN_PASSWORD: {{ keycloak.KEYCLOAK_ADMIN_PASSWORD }}
      GF_URL: "{{ grafana.GF_HOSTNAME }}:{{ grafana.GF_SERVER_HTTP_PORT }}"
      GF_ADMIN_USERNAME: {{ grafana.GF_ADMIN_USERNAME }}
      GF_ADMIN_PASSWORD: {{ grafana.GF_ADMIN_PASSWORD }}
      KC_HOSTNAME: {{ keycloak.KC_HOSTNAME }}
      KC_HTTP_ENABLED: {{ keycloak.KC_HTTP_ENABLED }}
      KC_PROXY_HEADERS: {{ keycloak.KC_PROXY_HEADERS }}
      KC_FEATURES: {{ keycloak.KC_FEATURES }}
      KC_HEALTH_ENABLED: {{ keycloak.KC_HEALTH_ENABLED }}
      KC_PORT: {{ keycloak.KC_PORT }}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - {{ keycloak.KC_PORT }}:8080
      - {{ keycloak.KC_MANAGEMENT_PORT }}:9000
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro
    logging: *logging

  prometheus:
    image: prom/prometheus:{{ prometheus.PROMETHEUS_VERSION }}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=14d'
      - '--storage.tsdb.wal-compression'
      - '--web.enable-lifecycle'
      - '--web.external-url={{ prometheus.PROMETHEUS_EXTERNAL_URL }}'
      - '--web.route-prefix={{ prometheus.PROMETHEUS_ROUTE_PREFIX }}'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
    ports:
      - {{ prometheus.PROMETHEUS_PORT }}:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    logging: *logging

  grafana:
    image: grafana/grafana-oss:{{ grafana.GF_VERSION }}
    restart: unless-stopped
    ports:
      - {{ grafana.GF_SERVER_HTTP_PORT }}:{{ grafana.GF_SERVER_HTTP_PORT }}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:{{ grafana.GF_SERVER_HTTP_PORT }}:/api/health"]
    environment:
      GF_SERVER_HTTP_PORT: {{ grafana.GF_SERVER_HTTP_PORT }}
      GF_SERVER_ROOT_URL: https://{{ grafana.GF_HOSTNAME }}
      GF_LOG_LEVEL: {{ grafana.GF_LOG_LEVEL }}
      GF_AUTH_BASIC_ENABLED: {{ grafana.GF_AUTH_BASIC_ENABLED }}
      GF_AUTH_DISABLE_LOGIN_FORM: {{ grafana.GF_AUTH_DISABLE_LOGIN_FORM }}
      GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: {{ grafana.GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE }}
      GF_AUTH_GENERIC_OAUTH_ENABLED: {{ grafana.GF_AUTH_GENERIC_OAUTH_ENABLED }}
      GF_AUTH_GENERIC_OAUTH_NAME: {{ grafana.GF_AUTH_GENERIC_OAUTH_NAME }}
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: {{ grafana.GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP }}
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: {{ grafana.GF_AUTH_GENERIC_OAUTH_CLIENT_ID }}
      GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_NAME: {{ grafana.GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_NAME }}
      GF_AUTH_GENERIC_OAUTH_SCOPES: {{ grafana.GF_AUTH_GENERIC_OAUTH_SCOPES }}
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://{{ keycloak.KC_HOSTNAME }}/realms/{{ keycloak.KC_REALM_NAME }}/protocol/openid-connect/auth
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://{{ keycloak.KC_HOSTNAME }}/realms/{{ keycloak.KC_REALM_NAME }}/protocol/openid-connect/token
      GF_AUTH_GENERIC_OAUTH_API_URL: https://{{ keycloak.KC_HOSTNAME }}/realms/{{ keycloak.KC_REALM_NAME }}/protocol/openid-connect/userinfo
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      postgres:
        condition: service_healthy
    logging: *logging

volumes:
  {{ postgresql.volume_name }}:
