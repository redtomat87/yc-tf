- name: Debug all facts
  debug:
    msg: "{{ ansible_default_ipv4.address }}"

# - name: Synchronize ACME directories
#   ansible.posix.synchronize:
#     src: "{{ local_backup.dir }}/{{ item }}/"
#     dest: "/var/lib/angie/acme/{{ item }}/"
#     mode: push
#     recursive: true
#     checksum: true
#     rsync_opts:
#       - "--chmod=D0700,F0600"
#       - "--rsync-path='sudo rsync'"
#       - "--ignore-existing"
#       - "--update"
#   loop: "{{ acme.dirs }}"
#   delegate_to: localhost
#   become: false
#   when:
#     - (local_backup.dir + '/' + item) is directory

- name: Maintain Angie configurations with validation and rollback
  block:
    - name: Copy main Angie configuration template and backup existing config
      template:
        src: angie.conf.j2
        dest: "{{ angie.conf_dest }}"
        backup: yes
        mode: '0640'
        owner: root
        group: root
      register: updated_main

    - name: Copy redtomat site configuration template and backup existing config
      template:
        src: redtomat.conf.j2
        dest: "{{ sites.wordpress.site_agnie_config_path }}"
        backup: yes
        mode: '0640'
        owner: root
        group: root
      register: updated_wordpress

    - name: Validate Angie configuration
      command: angie -t
      when: updated_main is changed or updated_wordpress is changed
      register: validation
      failed_when: validation.rc != 0

  rescue:
    - name: Restore previous main Angie configuration
      copy:
        remote_src: true
        dest: "{{ angie.conf_dest }}"
        src: "{{ updated_main['backup_file'] }}"
      when: updated_main is changed

    - name: Restore previous WordPress site configuration
      copy:
        remote_src: true
        dest: "{{ sites.wordpress.site_agnie_config_path }}"
        src: "{{ updated_wordpress['backup_file'] }}"
      when: updated_wordpress is changed

  always:
    - name: Clean up main config backup file
      file:
        path: "{{ updated_main['backup_file'] if updated_main is changed and 'backup_file' in updated_main else None }}"
        state: absent
      when: updated_main is changed and validation is success

    - name: Clean up WordPress config backup file
      file:
        path: "{{ updated_wordpress['backup_file'] if updated_wordpress is changed and 'backup_file' in updated_wordpress else None }}"
        state: absent
      when: updated_wordpress is changed and validation is success

  notify: Restart angie

- name: Check and backup ACME directories
  block:
    - name: Get remote directories status
      ansible.builtin.find:
        paths: /var/lib/angie/acme
        file_type: directory
        patterns: "{{ acme.dirs }}"
      register: remote_dirs_backup

    - name: Create local backup directory if it doesn't exist
      ansible.builtin.file:
        path: "{{ local_backup.dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      become: false

    - name: Backup ACME directories to local host
      ansible.builtin.synchronize:
        src: "{{ item.path }}/"
        dest: "{{ local_backup.dir }}/{{ item.path | basename }}/"
        mode: pull
        recursive: true
        use_ssh_args: true
        rsync_opts:
          - "--chmod=D0755,F0644"
          - "--rsync-path='sudo rsync'"
          - "--checksum"
      loop: "{{ remote_dirs_backup.files }}"
      when: remote_dirs_backup.matched > 0
      delegate_to: localhost
      become: false
  tags:
    - backup
