- name: Creating cert dir
  ansible.builtin.file:
    path: /etc/ssl/angie/
    state: directory
    mode: '755'
    owner: _apt
    group: nogroup
  tags:
    - 'angie'

- name: Copy Angie certificates and key
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: _apt
    group: nogroup
    mode: "{{ item.mode }}"
  loop:
    - { src: "files/angie-repo.crt", dest: "/etc/ssl/angie/angie-repo.crt", mode: "0600" }
    - { src: "files/angie-repo.key", dest: "/etc/ssl/angie/angie-repo.key", mode: "0600" }
  tags:
    - 'angie'


- name: Apt cache update
  ansible.builtin.apt:
    update_cache: true
  tags:
    - 'angie'

- name: Installing auxiliary packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - lsb-release
      - ca-certificates
      - curl
      - gnupg2
    state: present
  tags:
    - 'angie'

- name: Downloading Angie repo key
  ansible.builtin.get_url:
    url: https://angie.software/keys/angie-signing.gpg
    dest: /etc/apt/trusted.gpg.d/angie-signing.gpg
  tags:
    - 'angie'

- name: Setup Angie PRO dir
  ansible.builtin.shell: |
    . /etc/os-release && echo "deb https://download.angie.software/angie-pro/$ID/$VERSION_ID $VERSION_CODENAME main" | tee /etc/apt/sources.list.d/angie.list > /dev/null
  args:
    executable: /bin/bash
  tags:
    - 'angie'

- name: Check Angie sources list content
  ansible.builtin.command: cat /etc/apt/sources.list.d/angie.list
  register: angie_sources
  changed_when: false
  tags:
    - 'angie'

- name: Display Angie sources list content
  ansible.builtin.debug:
    var: angie_sources.stdout
  tags:
    - 'angie'


- name: Configuring Angie repo
  ansible.builtin.copy:
    mode: '0644'
    dest: /etc/apt/apt.conf.d/90download-angie
    content: |
      Acquire::https::download.angie.software::Verify-Peer "true";
      Acquire::https::download.angie.software::Verify-Host "true";
      Acquire::https::download.angie.software::SslCert     "/etc/ssl/angie/angie-repo.crt";
      Acquire::https::download.angie.software::SslKey      "/etc/ssl/angie/angie-repo.key";
  tags:
    - 'angie'

- name: Apt cache update
  ansible.builtin.apt:
    update_cache: true
  register: apt_update_result
  ignore_errors: true
  tags:
    - 'angie'

- name: Display apt update error if any
  ansible.builtin.debug:
    var: apt_update_result
  when: apt_update_result is failed
  tags:
    - 'angie'

- name: Installing angie-pro
  ansible.builtin.apt:
    name: angie-pro
    state: present
  tags:
    - 'angie'

- name: Installing extra modules
  ansible.builtin.apt:
    name:
      - angie-pro-module-zstd
      - angie-pro-module-brotli
    state: present
  tags:
    - 'angie'

- name: Copying angie.conf
  ansible.builtin.template:
    src: angie.conf.j2
    dest: "{{ angie_conf_dest }}"
    mode: '0644'
  tags:
    - 'angie'

- name: Copy the archived file to the remote host
  ansible.builtin.copy:
    src: nginx_conf.tar-252831-0242cd.gz
    dest: /tmp/nginx-archive.tar.gz
    mode: '0644'
  tags:
    - 'angie'

- name: Extract the archived file to the specified directory
  ansible.builtin.unarchive:
    src: /tmp/nginx-archive.tar.gz
    dest: /etc
    remote_src: true
  tags:
    - 'angie'

- name: Create symbolic link
  ansible.builtin.file:
    src: /etc/angie/sites-available/default
    dest: /etc/angie/sites-enabled/default
    state: link
  tags:
    - 'angie'

- name: Restart angie
  ansible.builtin.systemd:
    name: angie
    state: restarted
    enabled: true
  tags:
    - 'angie'
