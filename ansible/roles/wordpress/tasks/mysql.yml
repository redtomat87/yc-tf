- name: Install MySQL server
  ansible.builtin.apt:
    name:
      - python3-pymysql
      - mysql-server
    state: present

- name: Start and enable MySQL service
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Check if MySQL is using socket authentication
  community.mysql.mysql_query:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    query: SELECT 1
  register: mysql_socket_auth
  ignore_errors: true

- name: Set MySQL root password for the first time (socket auth)
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: '*.*:ALL,GRANT'
    plugin: mysql_native_password
    state: present
  when:
    - mysql_socket_auth is success
    - mysql_root_password != ""

- name: Check current MySQL root auth method
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    query: SELECT plugin FROM mysql.user WHERE User='root' AND Host='localhost';
  register: mysql_root_auth_method
  ignore_errors: true

- name: Change MySQL root authentication to use password
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    priv: '*.*:ALL,GRANT'
    plugin: mysql_native_password
    state: present
  when:
    - mysql_root_password != ""
    - mysql_root_auth_method.failed or (mysql_root_auth_method.query_result[0][0] != 'mysql_native_password')

- name: Check MySQL status
  ansible.builtin.command: systemctl status mysql
  register: mysql_status
  changed_when: false

- name: Display MySQL status
  ansible.builtin.debug:
    var: mysql_status.stdout_lines

- name: Test MySQL root connection
  community.mysql.mysql_info:
    login_user: root
    login_password: "{{ mysql_root_password }}"
  register: mysql_connection_test
  ignore_errors: true

- name: Remove anonymous MySQL users
  community.mysql.mysql_user:
    name: ''
    host_all: true
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: mysql_connection_test is success

- name: Remove test database
  community.mysql.mysql_db:
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: mysql_connection_test is success

- name: Create MySQL database for WordPress
  community.mysql.mysql_db:
    name: "{{ mysql_wordpress_db }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: mysql_connection_test is success

- name: Create MySQL user for WordPress with remote access
  community.mysql.mysql_user:
    name: "{{ mysql_wordpress_user }}"
    host: '%'
    password: "{{ mysql_wordpress_user_password }}"
    priv: "{{ mysql_wordpress_db }}.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: mysql_connection_test is success

- name: Configure MySQL bind addresses
  community.general.ini_file:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    section: mysqld
    option: "{{ item.option }}"
    value: 0.0.0.0
  loop:
    - { option: 'bind-address' }
    - { option: 'mysqlx-bind-address' }
  notify: Restart MySQL
